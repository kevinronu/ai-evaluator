---

---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Astro</title>
  </head>
  <body>
    <h1>Astro</h1>
    <form class="evaluator__form">
      <label
        >Project Name:
        <input type="text" name="storeName" required />
      </label>

      <label
        >Upload Files:
        <input type="file" name="documents" multiple required />
      </label>

      <progress max="100" value="0" class="evaluator__upload-progress"
      ></progress>

      <button type="submit">Evaluate</button>
    </form>
  </body>
</html>
<script type="module">
  const form = document.querySelector(".evaluator__form");
  const progressBar = form.querySelector(".evaluator__upload-progress");

  form?.addEventListener("submit", async (event) => {
    event.preventDefault();

    const { storeName, documents } = event.target;

    const formData = new FormData();
    formData.append("storeName", storeName.value);

    for (const file of documents.files) {
      formData.append("files", file);
    }

    progressBar?.value = 0;

    const xhr = new XMLHttpRequest();
    xhr.open("POST", "/api/upload");

    xhr.upload.addEventListener("progress", (event) => {
      if (event.lengthComputable) {
        progressBar?.value = (event.loaded / event.total) * 100;
      }
    });

    xhr.onload = () => {
      const result = JSON.parse(xhr.responseText);

      const params = new URLSearchParams({
        projectName: result.vector_store_name,
        storeID: result.vector_store_id,
        language: `Spanish`,
      });

      window.location.href = `/evaluate?${params.toString()}`;
    };

    xhr.onerror = () => {
      alert("Upload failed.");
    };

    xhr.send(formData);
  });
</script>
